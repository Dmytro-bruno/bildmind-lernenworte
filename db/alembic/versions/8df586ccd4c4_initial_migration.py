"""initial migration

Revision ID: 8df586ccd4c4
Revises:
Create Date: 2025-06-04 19:51:09.308686

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "8df586ccd4c4"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("username", sa.String(length=150), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_superuser", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email", name="uq_user_email"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("username", name="uq_user_username"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "words",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("base_form", sa.String(length=255), nullable=False),
        sa.Column("article", sa.String(length=10), nullable=True),
        sa.Column("base_and_article", sa.String(length=255), nullable=False),
        sa.Column("translation", sa.String(length=255), nullable=False),
        sa.Column("lang_from", sa.String(length=10), nullable=False),
        sa.Column("lang_to", sa.String(length=10), nullable=False),
        sa.Column("example", sa.String(length=512), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "base_form",
            "translation",
            "lang_from",
            "lang_to",
            name="uq_word_baseform_translation_langs",
        ),
    )
    op.create_index(op.f("ix_words_id"), "words", ["id"], unique=True)
    op.create_table(
        "daily_progress",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("date", sa.DateTime(timezone=True), nullable=False),
        sa.Column("words_learned", sa.Integer(), nullable=False),
        sa.Column("words_reviewed", sa.Integer(), nullable=False),
        sa.Column("test_sessions_passed", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("user_id", "date", name="uq_daily_progress_user_date"),
    )
    op.create_index(op.f("ix_daily_progress_date"), "daily_progress", ["date"], unique=False)
    op.create_index(op.f("ix_daily_progress_user_id"), "daily_progress", ["user_id"], unique=False)
    op.create_table(
        "gpt_logs",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("word_id", sa.UUID(), nullable=True),
        sa.Column("prompt", sa.Text(), nullable=False),
        sa.Column("response", sa.Text(), nullable=False),
        sa.Column("token_usage", sa.Integer(), nullable=False),
        sa.Column(
            "timestamp", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["word_id"], ["words.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(op.f("ix_gpt_logs_user_id"), "gpt_logs", ["user_id"], unique=False)
    op.create_index(op.f("ix_gpt_logs_word_id"), "gpt_logs", ["word_id"], unique=False)
    op.create_table(
        "level_progress",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("word_level", sa.String(length=8), nullable=False),
        sa.Column("words_learned", sa.Integer(), nullable=False),
        sa.Column("accuracy", sa.Float(), nullable=False),
        sa.Column("last_interaction", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("user_id", "word_level", name="uq_levelprogress_user_level"),
    )
    op.create_index(op.f("ix_level_progress_user_id"), "level_progress", ["user_id"], unique=False)
    op.create_table(
        "test_sessions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "start_time",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("end_time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("words_total", sa.Integer(), nullable=False),
        sa.Column("correct", sa.Integer(), nullable=False),
        sa.Column("test_type", sa.String(length=50), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(op.f("ix_test_sessions_user_id"), "test_sessions", ["user_id"], unique=False)
    op.create_table(
        "token_blacklist",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("jti", sa.String(length=128), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("expired_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("reason", sa.String(length=100), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(op.f("ix_token_blacklist_jti"), "token_blacklist", ["jti"], unique=True)
    op.create_index(
        op.f("ix_token_blacklist_user_id"), "token_blacklist", ["user_id"], unique=False
    )
    op.create_table(
        "user_settings",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("interface_language", sa.String(length=10), nullable=False),
        sa.Column("native_language", sa.String(length=10), nullable=False),
        sa.Column("target_language", sa.String(length=10), nullable=False),
        sa.Column("notifications_enabled", sa.Boolean(), nullable=True),
        sa.Column("dark_mode", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("user_id"),
        sa.UniqueConstraint("user_id", name="uq_user_settings_user_id"),
    )
    op.create_table(
        "user_stats",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("words_learned", sa.Integer(), nullable=False),
        sa.Column("words_in_progress", sa.Integer(), nullable=False),
        sa.Column("test_sessions_total", sa.Integer(), nullable=False),
        sa.Column("test_sessions_passed", sa.Integer(), nullable=False),
        sa.Column("last_active", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("user_id"),
        sa.UniqueConstraint("user_id", name="uq_user_stats_user_id"),
    )
    op.create_table(
        "user_words",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("word_id", sa.UUID(), nullable=False),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("next_review_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("last_review_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_learned", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("success_count", sa.Integer(), nullable=False),
        sa.Column("fail_count", sa.Integer(), nullable=False),
        sa.Column("note", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["word_id"], ["words.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
        sa.UniqueConstraint("user_id", "word_id", name="uq_userword_user_word"),
    )
    op.create_index(op.f("ix_user_words_user_id"), "user_words", ["user_id"], unique=False)
    op.create_index(op.f("ix_user_words_word_id"), "user_words", ["word_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_words_word_id"), table_name="user_words")
    op.drop_index(op.f("ix_user_words_user_id"), table_name="user_words")
    op.drop_table("user_words")
    op.drop_table("user_stats")
    op.drop_table("user_settings")
    op.drop_index(op.f("ix_token_blacklist_user_id"), table_name="token_blacklist")
    op.drop_index(op.f("ix_token_blacklist_jti"), table_name="token_blacklist")
    op.drop_table("token_blacklist")
    op.drop_index(op.f("ix_test_sessions_user_id"), table_name="test_sessions")
    op.drop_table("test_sessions")
    op.drop_index(op.f("ix_level_progress_user_id"), table_name="level_progress")
    op.drop_table("level_progress")
    op.drop_index(op.f("ix_gpt_logs_word_id"), table_name="gpt_logs")
    op.drop_index(op.f("ix_gpt_logs_user_id"), table_name="gpt_logs")
    op.drop_table("gpt_logs")
    op.drop_index(op.f("ix_daily_progress_user_id"), table_name="daily_progress")
    op.drop_index(op.f("ix_daily_progress_date"), table_name="daily_progress")
    op.drop_table("daily_progress")
    op.drop_index(op.f("ix_words_id"), table_name="words")
    op.drop_table("words")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
